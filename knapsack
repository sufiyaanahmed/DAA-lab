#include&lt;stdio.h&gt;
#include&lt;conio.h&gt;
void knapsack();
int max(int,int);
int i,j,n,m,p[10],w[10],v[10][10];
void main()
{
clrscr();
printf(&quot;\nenter the no. of items:\t&quot;);
scanf(&quot;%d&quot;,&amp;n);
printf(&quot;\nenter the weight of the each item:\n&quot;);
for(i=1;i&lt;=n;i++)
{
scanf(&quot;%d&quot;,&amp;w[i]);
}
printf(&quot;\nenter the profit of each item:\n&quot;);
for(i=1;i&lt;=n;i++)
{
scanf(&quot;%d&quot;,&amp;p[i]);
}
printf(&quot;\nenter the knapsack&#39;s capacity:\t&quot;);
scanf(&quot;%d&quot;,&amp;m);
knapsack();
getch();
}
void knapsack()
{
int x[10];
for(i=0;i&lt;=n;i++)
{
for(j=0;j&lt;=m;j++)
{
if(i==0||j==0)
{
v[i][j]=0;
}
else if(j-w[i]&lt;0)
{
v[i][j]=v[i-1][j];
}
else
{
v[i][j]=max(v[i-1][j],v[i-1][j-w[i]]+p[i]);
}
}
}
printf(&quot;\nthe output is:\n&quot;);
for(i=0;i&lt;=n;i++)
{
for(j=0;j&lt;=m;j++)
{
printf(&quot;%d\t&quot;,v[i][j]);
}
printf(&quot;\n\n&quot;);
}
printf(&quot;\nthe optimal solution is %d&quot;,v[n][m]);
printf(&quot;\nthe solution vector is:\n&quot;);
for(i=n;i&gt;=1;i--)
{
if(v[i][m]!=v[i-1][m])
{
x[i]=1;
m=m-w[i];
}
else
{
x[i]=0;
}
}
for(i=1;i&lt;=n;i++)
{
printf(&quot;%d\t&quot;,x[i]);
}
}
int max(int x,int y)
{
if(x&gt;y)
{
return x;
}
else
{
return y;
}
}
